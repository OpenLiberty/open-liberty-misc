/*******************************************************************************
 * Copyright (c) 2023 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License 2.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
// To create this WAR file (ex: ./gradlew build...) for newer versions of Java (typically early access ones) before gradle supports it
// See the README.md file
// Change the installDir setting if your Liberty is located outside of /wlp

apply plugin: 'war'

description = "Basic Liberty repo"

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

compileJava {
    //inputs.property("moduleName", moduleName)
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,
            '--enable-preview'
        ]
        classpath = files()
        options.warnings = true
        options.deprecation = true
        options.debug = true
        options.incremental = false
    }
}
test {
  useJUnitPlatform()
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(22)
  }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'io.openliberty.tools:liberty-gradle-plugin:3.0'
    }
}

repositories {
    mavenCentral()
}

configurations {
    serverLibs
}

dependencies {
    compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version: '2.1.1'
//    compileOnly group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'
    compileOnly group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
//    compileOnly group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
//    compileOnly group: 'javax.transaction', name: 'javax.transaction-api', version: '1.3'
//    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '22.0.0.12'
//    serverLibs group: 'org.apache.derby', name: 'derby', version: '10.14.2.0' // '10.15.1.3'
}

ext {
	appUrl = 'http://localhost:9080/io.openliberty.java.internal_fat_21/'
}

task copyServerLibs(type: Copy) {
    from configurations.serverLibs
    // Default location of local Liberty server
    into "/wlp/usr/servers/${project.name}Server/lib"
}

// Not currently working, must manually handle
tasks.register('copyEnvFiles', Copy) {
    println "Start of copyEnvFiles"
    from file('run/jvm.options')
// Default location of local Liberty server
    into new File("/wlp/usr/servers/${project.name}Server")
    from file('run/server.env')
// Default location of local Liberty server
    into new File("/wlp/usr/servers/${project.name}Server")
    println "End of copyEnvFiles"
}

task openBrowser {
    description = "Open browser to ${appUrl}"
    doLast {
        java.awt.Desktop.desktop.browse "${appUrl}".toURI()
    }
}

